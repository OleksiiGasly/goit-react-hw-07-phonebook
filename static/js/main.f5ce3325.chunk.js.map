{"version":3,"sources":["components/Loader/Loader.module.css","redux/slice.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/List/List.styled.jsx","components/List/Contact.jsx","components/List/List.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.styled.jsx","components/Loader/Loader.jsx","App.js","redux/store.jsx","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useCreateContactMutation","useDeleteContactMutation","Form","styled","form","Label","label","Input","input","Button","button","ContactForm","useState","name","setName","number","setNumber","addContact","isLoading","contacts","data","handleContact","e","currentTarget","value","onSubmit","preventDefault","some","contact","toast","htmlFor","onChange","type","pattern","title","required","disabled","List","ul","Item","li","Contact","id","onClick","ContactList","onDeleteContact","map","Filter","FirstTitle","h1","SecondTitle","h2","ApplyLoader","options","color","height","width","className","css","container","App","isFetching","isDeleting","filter","setFilter","target","normalizedFilter","toLowerCase","includes","getVisibleContacts","deleting","position","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","setupListeners","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5ce3325.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__2CSXL\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://617fcd82055276001774fc7b.mockapi.io/api/v1/',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => 'Contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/Contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/Contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useFetchContactsQuery, useCreateContactMutation, useDeleteContactMutation } =\r\n  contactsApi;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: block;\n  margin-left: 22px;\n`;\n\nexport const Label = styled.label`\n  font-size: 15px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 222px;\n  height: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 56px;\n  margin-top: 10px;\n  width: 110px;\n  height: 37px;\n  color: white;\n  background-color: navy;\n  border-style: none;\n  border-radius: 4px;\n`;\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './Form.styled';\nimport { useFetchContactsQuery, useCreateContactMutation } from '../../redux/slice';\nimport toast from 'react-hot-toast';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [addContact, { isLoading }] = useCreateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const handleContact = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactToCheck = contacts.some(contact => contact.name === name);\n    if (contactToCheck) {\n      toast(`${name} is already in contacts`);\n      setName('');\n      setNumber('');\n      return;\n    }\n    addContact({ name, number });\n    toast(`${name} is added to contacts`);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          value={name}\n          onChange={handleContact}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number\n        <Input\n          value={number}\n          onChange={handleContact}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы,\n             тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <div>\n        <Button type=\"submit\" disabled={isLoading}>\n          Add contact\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 22px;\n`;\n\nexport const Item = styled.li`\n  background-color: whitesmoke;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 444px;\n  margin-bottom: 8px;\n`;\n\nexport const Button = styled.button`\n  min-width: 88px;\n  height: 30px;\n  color: white;\n  background-color: navy;\n  border-style: none;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './List.styled';\n\nexport const Contact = ({ id, name, number, onClick }) => {\n  return (\n    <Item key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <Button type=\"button\" onClick={onClick}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};","import PropTypes from 'prop-types';\nimport { Contact } from './Contact';\nimport { List } from './List.styled';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Contact\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default ContactList;","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 22px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { Label } from './Filter.styled';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      <p> Find contact by name</p>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const FirstTitle = styled.h1`\n  margin-left: 110px;\n`;\n\nexport const SecondTitle = styled.h2`\n  margin-top: 40px;\n  margin-left: 144px;\n`;\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport css from './Loader.module.css'\r\n\r\nconst ApplyLoader = ({ type = 'Puff' }) => {\r\n  const options = {\r\n    type,\r\n    color: 'cornflowerblue',\r\n    height: 88,\r\n    width: 88,\r\n  };\r\n  return (\r\n    <div className={css.container}>\r\n      <Loader {...options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplyLoader;","import { useFetchContactsQuery, useDeleteContactMutation } from './redux/slice';\nimport { useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport Form from './components/Form/Form';\nimport List from './components/List/List';\nimport Filter from './components/Filter/Filter';\nimport { FirstTitle, SecondTitle } from './App.styled';\nimport ApplyLoader from './components/Loader/Loader';\n// import toast from 'react-hot-toast';\n\nconst App = () => {\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const [filter, setFilter] = useState('');\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  return (\n    <div>\n      <FirstTitle>Phonebook</FirstTitle>\n      <Form />\n      <SecondTitle>Contacts</SecondTitle>\n      <Filter value={filter} onChange={changeFilter} />\n      {isFetching && ApplyLoader}\n      {contacts && (\n        <List\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n          deleting={isDeleting}\n        />\n      )}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport logger from 'redux-logger';\nimport { contactsApi } from './slice';\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), contactsApi.middleware, logger],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nsetupListeners(store.dispatch);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}